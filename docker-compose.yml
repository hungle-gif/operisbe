version: '3.9'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: operis_postgres
    environment:
      POSTGRES_DB: operis_db
      POSTGRES_USER: operis_user
      POSTGRES_PASSWORD: operis_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U operis_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - operis_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: operis_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - operis_network

  # Backend API (Django)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: operis_backend
    environment:
      DB_NAME: operis_db
      DB_USER: operis_user
      DB_PASSWORD: operis_password
      DB_HOST: postgres
      DB_PORT: 5432
      REDIS_URL: redis://redis:6379/1
      DJANGO_SETTINGS_MODULE: config.settings.development
      SECRET_KEY: django-insecure-dev-key-change-in-production
    ports:
      - "8001:8000"
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    networks:
      - operis_network

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: operis_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8001
    ports:
      - "3001:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - operis_network

volumes:
  postgres_data:
  redis_data:

networks:
  operis_network:
    driver: bridge
